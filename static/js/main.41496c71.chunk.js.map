{"version":3,"sources":["components/Sidebar.js","components/TitleBanner.js","components/MainWeatherDisplay.js","components/FiveDayForcast.js","pages/WeatherPage.js","App.js","index.js"],"names":["SideBar","props","cityInput","useRef","onSubmit","event","preventDefault","searchCity","current","value","style","marginLeft","htmlFor","fontSize","className","type","ref","placeholder","citiesButtons","map","city","onClick","removeCitySearchHistorySingle","TitleBanner","margin","href","MainWeatherDisplay","backgroundColor","borderStyle","textAlign","fontWeight","date","main","temp","humidity","wind","speed","setUVColor","uvIndex","fontFamily","name","alt","width","height","marginTop","display","marginRight","src","weather","icon","FiveDayForcast","fiveDayForcast","dailyForcast","iconUrl","temperature","WeatherPage","cityLatitude","cityLongitude","useState","setCity","setUVIndex","setDate","iconURL","setFiveDayForcast","apiKey","citiesButtonHistory","localStorage","getItem","JSON","parse","setCitiesButtons","lastSearchedHistory","lastSearched","setLastSearched","cityRequest","fetch","then","res","ok","json","data","Date","dt","toLocaleDateString","coord","lon","lat","searchCityUVIndex","searchFiveDayForcast","includes","catch","error","console","log","parseInt","fiveDayForcastHolder","dateCount","list","dt_txt","substring","push","useEffect","setItem","stringify","tempHistoryCopy","cityIndex","indexOf","splice","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41496c71.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\n\r\nfunction SideBar(props) {\r\n    const cityInput = useRef(\"\");\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.searchCity(cityInput.current.value);\r\n        cityInput.current.value=\"\";\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <form onSubmit={handleSubmit} style={{ marginLeft: \"10%\" }}>\r\n                <label htmlFor=\"cities-search-input\" style={{fontSize:\"125%\"}}>Search City</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <input type=\"text\" ref={cityInput} className=\"form-control cities-search-input\" placeholder=\"New York, Toronto...\" />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n            <div className=\"cities-buttons-holder\">\r\n                {props.citiesButtons.map(city => (\r\n                    <div key={city} style={{marginLeft:\"10%\"}}>\r\n                        <button className=\"btn btn-primary col-7 mt-2\" onClick={() => props.searchCity(city)}>{city}</button>\r\n                        <button onClick={() => props.removeCitySearchHistorySingle(city)} className=\"btn btn-primary col-3 mt-2\" style={{ marginLeft: \"5px\" }}>Delete</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","function TitleBanner() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark\" >\r\n                <a className=\"navbar-brand \" style={{margin:\"auto\"}} href=\"/\">Weather Dashboard</a>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default TitleBanner;","function MainWeatherDisplay(props) {\r\n    return (\r\n        <div className=\"row\" style={{ backgroundColor: \"#659DBD\", borderStyle: \"solid\" }}>\r\n            <div className=\"col-md-8\" style={{ textAlign: \"center\" }}>\r\n                <div style={{ fontSize: \"200%\", fontWeight: \"bold\" }} >{`${props.date}`}</div>\r\n                <div style={{ fontSize: \"700%\" }}>{`${props.city.main.temp}Â°`}<span className=\"main-temperature\"></span></div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\" style={{ fontWeight: \"bold\" }}>\r\n                        <div style={{ fontSize: \"150%\" }}>Humidity</div>\r\n                        <div style={{ fontSize: \"125%\" }}>{`${props.city.main.humidity} %`}</div>\r\n                    </div>\r\n                    <div className=\"col-md-4\" style={{ fontWeight: \"bold\" }}>\r\n                        <div style={{ fontSize: \"150%\" }}>Wind Speed</div>\r\n                        <div style={{ fontSize: \"125%\" }}>{`${props.city.wind.speed} MPH`}</div>\r\n                    </div>\r\n                    <div className=\"col-md-4\" style={{ fontWeight: \"bold\" }}>\r\n                        <div style={{ fontSize: \"150%\" }}>UV Index</div>\r\n                        <div style={{ fontSize: \"125%\" }}><span style={props.setUVColor()} className=\"border rounded-pill main-UV-Index\">{props.uvIndex}</span></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-md-4\" style={{textAlign:\"center\"}}>\r\n                <h2 style={{ fontFamily: \"Serif\", fontSize: \"400%\" }}>{props.city.name}</h2>\r\n                <img alt={props.city.name} style={{ width: \"50%\", height: \"75%\", marginTop: \"-10%\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }} src={`https://openweathermap.org/img/wn/${props.city.weather[0].icon}@2x.png`}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainWeatherDisplay;","function FiveDayForcast(props) {\r\n    return (\r\n        <div className=\"row\" style={{ borderStyle: \"solid\" }}>\r\n            <div className=\"card-body\">\r\n                <div className=\"row \" style={{ margin: \"auto\" }}>\r\n                    {props.fiveDayForcast.map(dailyForcast => (\r\n                        <div style={{ width: \"20%\", textAlign: \"center\", }} key={dailyForcast.date}>\r\n                            <div style={{ fontSize: \"150%\", fontWeight: \"bold\" }}>{dailyForcast.date}</div>\r\n                            <img style={{ width: \"40%\" }} src={dailyForcast.iconUrl} alt={dailyForcast.date}></img>\r\n                            <div style={{ fontSize: \"125%\" }}>{dailyForcast.temperature}</div>\r\n                            <div style={{ fontSize: \"125%\" }}>{dailyForcast.humidity}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FiveDayForcast;","import { useState, useEffect } from \"react\";\r\nimport SideBar from \"../components/Sidebar\";\r\nimport TitleBanner from \"../components/TitleBanner\";\r\nimport MainWeatherDisplay from \"../components/MainWeatherDisplay\";\r\nimport FiveDayForcast from \"../components/FiveDayForcast\";\r\n\r\nfunction WeatherPage(props) {\r\n    const [city, setCity] = useState();\r\n    const [uvIndex, setUVIndex] = useState();\r\n    const [date, setDate] = useState();\r\n    const [fiveDayForcast, setFiveDayForcast] = useState([{\r\n        date: \"\",\r\n        iconURL: \"\",\r\n        temperature: \"\",\r\n        humidity: \"\",\r\n    }]);\r\n    var apiKey = \"9533f3cb4c01176c409c57b70db75f3f\";\r\n    var cityLatitude, cityLongitude;\r\n\r\n\r\n    const citiesButtonHistory = localStorage.getItem(\"cities\") !== null ? JSON.parse(localStorage.getItem(\"cities\")) : [];\r\n    const [citiesButtons, setCitiesButtons] = useState(citiesButtonHistory);\r\n\r\n    const lastSearchedHistory = localStorage.getItem(\"lastSearched\") !== null ? localStorage.getItem(\"lastSearched\") : \"New York\";\r\n    const [lastSearched, setLastSearched] = useState(lastSearchedHistory);\r\n\r\n    const searchCity = (cityRequest) => {\r\n        var queryUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityRequest + \"&units=imperial&appid=\"\r\n            + apiKey;\r\n        fetch(queryUrl)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    return city;\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setCity(data);\r\n                setDate(new Date(data.dt * 1000).toLocaleDateString(\"en-US\"));\r\n                cityLongitude = data.coord.lon;\r\n                cityLatitude = data.coord.lat;\r\n                searchCityUVIndex(cityLongitude, cityLatitude);\r\n                searchFiveDayForcast(data.name)\r\n                if (!citiesButtons.includes(data.name)) {\r\n                    setCitiesButtons([data.name, ...citiesButtons]);\r\n                }\r\n                setLastSearched(data.name);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const getCitySearchHistory = () => {\r\n        searchCity(lastSearched);\r\n        searchFiveDayForcast(lastSearched);\r\n    }\r\n\r\n    const removeCitySearchHistorySingle = (city) => {\r\n        var tempHistoryCopy = [...citiesButtons];\r\n        var cityIndex = tempHistoryCopy.indexOf(city);\r\n        if(cityIndex !== -1) {\r\n            tempHistoryCopy.splice(cityIndex,1);\r\n            setCitiesButtons(tempHistoryCopy);\r\n        }\r\n    }\r\n\r\n    const searchCityUVIndex = (cityLongitude, cityLatitude) => {\r\n        var IVIndexQueryUrl = \"https://api.openweathermap.org/data/2.5/uvi?lat=\" + cityLatitude + \"&lon=\" + cityLongitude + \"&units=imperial&appid=\" + apiKey;\r\n        fetch(IVIndexQueryUrl)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setUVIndex(parseInt(data.value));\r\n                setUVColor();\r\n            })\r\n    }\r\n\r\n    const setUVColor = () => {\r\n        if (uvIndex >= 11) {\r\n            return { backgroundColor: \"purple\" };\r\n        }\r\n        else if (uvIndex >= 8) {\r\n            return { backgroundColor: \"red\" };\r\n        }\r\n        else if (uvIndex >= 6) {\r\n            return { backgroundColor: \"orange\" };\r\n        }\r\n        else if (uvIndex >= 3) {\r\n            return { backgroundColor: \"yellow\" };\r\n        }\r\n        else if (uvIndex >= 0) {\r\n            return { backgroundColor: \"green\" };\r\n        }\r\n    }\r\n\r\n    function searchFiveDayForcast(city) {\r\n        var queryUrl = \"https://api.openweathermap.org/data/2.5/forecast?q=\" + city + \"&units=imperial&appid=\" + apiKey;\r\n        fetch(queryUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let fiveDayForcastHolder = [];\r\n                for (var dateCount = 0; dateCount < 5; dateCount++) {\r\n                    let dailyForcast = {};\r\n                    dailyForcast.date = data.list[dateCount * 8].dt_txt.substring(0, 10);\r\n                    dailyForcast.iconUrl = \"https://openweathermap.org/img/wn/\" + data.list[dateCount * 8].weather[0].icon + \".png\";\r\n                    dailyForcast.temperature = \"Temperature: \" + data.list[dateCount * 8].main.temp + \"Â°\";\r\n                    dailyForcast.humidity = \"Humidity: \" + data.list[dateCount * 8].main.humidity + \"%\";\r\n                    fiveDayForcastHolder.push(dailyForcast);\r\n                }\r\n                setFiveDayForcast(fiveDayForcastHolder);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCitySearchHistory();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cities\", JSON.stringify(citiesButtons));\r\n    }, [citiesButtons])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"lastSearched\", lastSearched);\r\n    }, [lastSearched])\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"row\">\r\n                <TitleBanner></TitleBanner>\r\n                <div className=\"col-md-4\" style={{ backgroundColor: \"#C5CBE3\", borderStyle: \"solid\" }}>\r\n                    <SideBar searchCity={searchCity} citiesButtons={citiesButtons} removeCitySearchHistorySingle={removeCitySearchHistorySingle}></SideBar>\r\n                </div>\r\n                <div className=\"col-md-8\" style={{ backgroundColor: \"#EFE2BA\" }}>\r\n                    {city !== undefined &&\r\n                        <div>\r\n                            <MainWeatherDisplay city={city} date={date} setUVColor={setUVColor} uvIndex={uvIndex}></MainWeatherDisplay>\r\n                            <FiveDayForcast fiveDayForcast={fiveDayForcast}></FiveDayForcast>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherPage;","import WeatherPage from \"./pages/WeatherPage\";\n\nfunction App() {\n  return (\n    <div >\n        <WeatherPage></WeatherPage>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}